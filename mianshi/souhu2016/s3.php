<?php
/**
 *发奖金
狐进行了一次黑客马拉松大赛，全公司一共分为了N个组，每组一个房间排成一排开始比赛，比赛结束后没有公布成绩，但是每个组能够看到自己相邻的两个组里比自己成绩低的组的成绩，比赛结束之后要发奖金，以1w为单位，每个组都至少会发1w的奖金，另外，如果一个组发现自己的奖金没有高于比自己成绩低的组发的奖金，就会不满意，作为比赛的组织方，根据成绩计算出至少需要发多少奖金才能让所有的组满意。


输入描述:
每组数据先输入N，然后N行输入N个正整数，每个数表示每个组的比赛成绩。


输出描述:
输出至少需要多少w的奖金

输入例子:
10

20
32
12
32
45
11
21
31
41
33

输出例子:
20
 */
/**
 * 分析
自己相邻的两个组 应该是一个圈
 * 找出一个合适的最低的点 向两边延伸 一个点只能见到自己两侧较低的点  像树的结构
20      12           11
/       / \         /  \
33      32  32      45   21
 *                         \
 *                         31
 *                          \
 *                          41
下层的知道上层的   3 * 1    5 * 2  1*3  1*4  = 20

将树的结构转化为多维数组
 */
function deal($arr) {
	$narr = [];
	$len = count($arr);
	$flag = 0; //第几棵树  还得检查层
	$num = 0;
	/*for($i=0;$i<$len-1;$i++){
		        $temp=$arr[$i-1]<$arr[$i+1]?$arr[$i-1]:$arr[$i+1];
		        if($temp<$arr[$i]){
		            if($temp==$arr[$i-1]){
		                $na=$temp.','.$arr[$i];
		            }else{
		                $na=$arr[$i].','.$temp;
		            }
		            if($num==0){
		                $center=$arr[$i];
		            }
		            $num++;

		        }else{
		            $narr[$flag][]=$arr[$i];
		            $flag++;
		        }
	*/
	for ($i = 0; $i < $len - 1; $i++) {

	}

}