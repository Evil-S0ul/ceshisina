/** 
* @usage   判断坐标点是否在map中 
* @author  mw 
* @date    2015年12月06日  星期日  07:50:37  
* @param   点(x, y)， 映射集合map 
* @return  true 或 false 
* 
*/  
function pointInMap(x, y, map) {  
    //传入的映射集map一般是经过排序的，并且去除了重复元素。  
    var pmap = new Map();  
    pmap = map;  
      
    var size = pmap.size();  
      
    for (var i = 0; i <size ; i++) {  
        if (x == pmap.keys[i]) {                      
            var len = pmap.get(x).length;  
  
            for (var j = 0; j < len; j++) {  
                if (y == pmap.get(x)[j]) {  
                    return true;  
                }  
                  
            }  
        }         
    }  
      
    return false;  
}  

/** 
* @usage   路径搜寻 
* @author  mw 
* @date    2015年12月06日  星期日  08:01:32  
* @param   以(x, y)点为起点， 在map中进行递归的路径搜寻。 
*          搜寻条件是(x1, y1)必须满足x1<-[x, x+1], y1<-[y-1, y+1]并且在map中 
* @return  
* 
*/  
  
//Path类  
function Path() {  
    this.map = new Map();  
    //存放已经处理过的点  
    this.dealed = new Map();  
    this.pathArray = new Array();  
    //附带找出图形中心  
    this.xCenter = 0;  
    this.yCenter = 0;  
    //图形范围  
    this.xRange = 0;  
    this.yRange = 0;  
    //规整到100直径图片的比例  
    this.scale = 1;  
    //x, y的极值  
    this.xMax = -10000;  
    this.xMin = 10000;  
    this.yMax = -10000;  
    this.yMin = 10000;  
    //递归深度，代表连续线段的长度  
    this.level = 10;  
    this.LEVEL = 10; //作为常量  
    //路径上的控制点  
    this.xCur = 0;  
    this.ycur = 0;  
    this.xOri = 0;  
    this.yOri = 0;  
    //可试验次数，容忍点的空白  
    var tolerance = 3;  
      
      
    this.setMap = function(map) {  
        this.map = map;  
        this.pathArray.length = 0;  
    }  
      
    this.pathSearch = function(x, y, direct) {    
        //可继续  
        var hasNext = true;  
  
        //路径向左向下延伸，刚好是一半的圆周方向         
        switch (direct) {  
        case 1:  
            //容忍中间空白点数确定了试验次数  
            var i = 0;  
            for ( ; i < tolerance; i++) {  
                //方向右上  
                x++;  
                y--;  
                  
                if (pointInMap(x, y, this.map)) {  
                    //容许中间的空白点长度也参与长度计算  
                    this.level -= i+1;  
                    this.pathSearch(x, y, 1);  
                    //这个break感觉必须加上，不加会不会有问题，会不会锁死递归，有待验证  
                    break;  
                }  
            }  
              
            //超过容许范围，线段终结  
            if (i >= tolerance) {  
                hasNext = false;  
                this.xCur = x-tolerance;  
                this.yCur = y+tolerance;  
            }  
              
            break;  
          
        case 2:  
            //容忍中间空白点数确定了试验次数  
            var i = 0;  
            for ( ; i < tolerance; i++) {  
                //方向右  
                x++;  
                  
                if (pointInMap(x, y, this.map)) {  
                    //容许中间的空白点长度也参与长度计算  
                    this.level -= i+1;  
                    this.pathSearch(x, y, 2);  
                    //这个break感觉必须加上，不加会不会有问题，会不会锁死递归，有待验证  
                    break;  
                }  
            }  
              
            //超过容许范围，线段终结  
            if (i >= tolerance) {  
                hasNext = false;  
                this.xCur = x-tolerance;  
                this.yCur = y;  
            }  
              
            break;  
          
        case 3:  
            //容忍中间空白点数确定了试验次数  
            var i = 0;  
            for ( ; i < tolerance; i++) {  
                //方向右下  
                x++;  
                y++;  
                  
                if (pointInMap(x, y, this.map)) {  
                    //容许中间的空白点长度也参与长度计算  
                    this.level -= i+1;  
                    this.pathSearch(x, y, 3);  
                    //这个break感觉必须加上，不加会不会有问题，会不会锁死递归，有待验证  
                    break;  
                }  
                  
            }  
              
            //超过容许范围，线段终结  
            if (i >= tolerance) {  
                hasNext = false;  
                this.xCur = x-tolerance;  
                this.yCur = y-tolerance;  
            }  
              
            break;  
          
        case 4:  
            //容忍中间空白点数确定了试验次数  
            var i = 0;  
            for ( ; i < tolerance; i++) {      
                //方向下  
                y++;  
                  
                if (pointInMap(x, y, this.map)) {  
                    //容许中间的空白点长度也参与长度计算  
                    this.level -= i+1;  
                    this.pathSearch(x, y, 4);  
                    //这个break感觉必须加上，不加会不会有问题，会不会锁死递归，有待验证  
                    break;  
                }  
  
            }  
              
            //超过容许范围，线段终结  
            if (i >= tolerance) {  
                hasNext = false;  
                this.xCur = x;  
                this.yCur = y-tolerance;  
            }  
              
            break;  
          
        default: break;  
        }  
          
  
        //线段长度足够并且已经无法延伸  
        if (this.level < 0 && hasNext == false) {  
            //此处简单处理，尽量减少处理量，增加处理速度，所以路径不会很全  
            //要是想要全路径需要把dealed升级为map，记录并对比方向量  
          
            //从起始点到当前点，但不包含当前点，标记为已经处理  
            if (this.xCur == this.xOri) {   
                //垂直，斜率为无穷大  
                if (this.yCur >= this.yOri) {  
                    for (var i = this.yCur; i>= this.yOri; i--) {  
                        this.dealed.put(this.xOri, i);  
                    }  
                } else {  
                    for (var i = this.yCur; i>= this.yOri; i++) {  
                        this.dealed.put(this.xOri, i);  
                    }  
                }  
            }  
            else if (this.yCur == this.yOri) {   
                //水平方向  
                if (this.xCur >= this.xOri) {  
                    for (var i = this.xCur; i>=this.xOri; i--) {  
                        this.dealed.put(i, this.yOri);  
                    }  
                } else {  
                    for (var i = this.xCur; i>=this.xOri; i++) {  
                        this.dealed.put(i, this.yOri);  
                    }  
                  
                }             
            }  
            else {        
                var n = Math.abs(this.xCur - this.xOri);  
                var k = Math.round((this.yCur - this.yOri) / (this.xCur - this.xOri));  
                if (k >= 0) {  
                    for (var i = 0; i < n; i++) {  
                        this.dealed.put(this.xOri + i, this.yOri + k * i);  
                    }  
                } else {  
                    for (var i = 0; i < n; i++) {  
                        this.dealed.put(this.xCur + i, this.yCur + k * i);  
                    }  
                }  
            }  
              
            //增加处理量的方法  
            //this.dealed.put(this.xOri, this.yOri);  
              
              
            if (0 == this.scale) this.scale = 1;  
            var x0 = Math.round((this.xOri - this.xCenter) / this.scale);  
            var y0 = Math.round((this.yOri - this.yCenter) / this.scale);  
            var x1 = Math.round((this.xCur - this.xCenter) / this.scale);  
            var y1 = Math.round((this.yCur - this.yCenter) / this.scale);             
              
              
            var i = 0;  
            for (; i < this.pathArray.length; i++) {  
              
                if (this.pathArray[i][0] == x0 &&  
                    this.pathArray[i][1] == y0 &&  
                    this.pathArray[i][2] == x1 &&  
                    this.pathArray[i][3] == y1) {  
                    break;  
                }  
            }  
            if (i >= this.pathArray.length) {  
                this.pathArray.push([x0, y0, x1, y1]);  
            }  
              
            //this.pathArray.push([x0, y0, x1, y1]);  
              
            this.level = this.LEVEL;  
        }  
          
          
        //最后必然有某点不具有下一个相邻点而结束递归。          
        return true;  
          
    };  
      
    this.search = function () {  
        if (!this.dealed.isEmpty()) {  
            this.dealed.empty();  
        }  
          
        //确保已经有了映射图  
        if (0 == this.map.size()) return false;  
          
        this.map.sort();  
          
        var x0 = 0;  
        var y0 = 0;  
          
        var size = this.map.size();  
        var len = 0;  
          
          
        //求y中心点  
        for (var i = 0; i < size; i++) {  
            x0 = this.map.keys[i];  
            if (this.xMax < x0) this.xMax = x0;  
            if (this.xMin > x0) this.xMin = x0;  
              
            len = this.map.get(x0).length;  
              
            for (var j =0; j < len; j++) {  
                y0 = this.map.get(x0)[j];  
                  
                if (y0 > this.yMax) this.yMax = y0;  
                if (y0 < this.yMin) this.yMin = y0;        
  
            }  
        }  
          
        this.xCenter = (this.xMax + this.xMin) /2;  
        this.yCenter = (this.yMax + this.yMin) / 2;  
        this.xRange = this.xMax - this.xMin;  
        this.yRange = this.yMax - this.yMin;  
        this.scale = Math.max(this.xRange, this.yRange) / 100;  
          
    //  window.alert(this.xCenter + ", " + this.yCenter);  
          
        //路径递归的耗时操作，相当耗时  
        for (var i = 0; i < size; i++) {  
            x0 = this.map.keys[i];  
            len = this.map.get(x0).length;  
              
            for (var j =0; j < len; j++) {  
                y0 = this.map.get(x0)[j];  
                  
                //整个处理过程x从小到大，y从小到大处理，但路径上的点会超前循环，  
                //所以要进行判断来提高效率  
                if (!pointInMap(x0, y0, this.dealed)) {  
                    //此处每个点都视作起点，看它们有没有足够长的路径  
                    this.level = this.LEVEL;  
                    this.xCur = x0;  
                    this.yCur = y0;  
                    this.xOri = x0;  
                    this.yOri = y0;  
                    //向四个方向找路径  
                    this.pathSearch(x0, y0, 1);  
                    this.level = this.LEVEL;  
                    this.xCur = x0;  
                    this.yCur = y0;  
                    this.xOri = x0;  
                    this.yOri = y0;                   
                    this.pathSearch(x0, y0, 2);  
                    this.level = this.LEVEL;  
                    this.xCur = x0;  
                    this.yCur = y0;  
                    this.xOri = x0;  
                    this.yOri = y0;  
                    this.pathSearch(x0, y0, 3);  
                    this.level = this.LEVEL;  
                    this.xCur = x0;  
                    this.yCur = y0;  
                    this.xOri = x0;  
                    this.yOri = y0;  
                    this.pathSearch(x0, y0, 4);  
                }  
            }  
        }                     
                  
        window.alert("calc finished");        
    };  
}  







$pathArray = [[-50,-32,-23,-5], [-50,-31,-36,-17], [-50,-31,-45,-31], [-50,-31,-38,-19], [-50,-30,-44,-30], [-50,-30,-43,-30], [-50,-29,-45,-34], [-50,-29,-46,-29], [-50,-28,-44,-34], [-50,-28,-25,-28], [-50,-28,-24,-28], [-50,-27,-42,-35], [-50,-27,-41,-27], [-50,-27,-42,-34], [-50,-25,-43,-18], [-50,-25,-50,-18], [-50,-32,-33,-16], [-50,-28,-43,-35], [-50,-28,-42,-28], [-50,-26,-42,-34], [-50,-26,-45,-26], [-50,-25,-42,-17], [-50,-13,-46,-13], [-49,-32,-22,-5], [-49,-30,-10,-30], [-49,-27,-42,-34], [-49,-24,-40,-24], [-49,-24,-38,-13], [-49,-24,-49,-17], [-49,-25,-41,-17], [-49,-25,-49,-17], [-49,-27,-41,-34], [-49,-13,-45,-13], [-48,-31,-37,-20], [-48,-27,-42,-34], [-48,-27,-42,-27], [-48,-27,-41,-34], [-48,-26,-33,-41], [-48,-26,-44,-26], [-48,-25,-40,-17], [-48,-25,-48,-17], [-48,-31,-43,-27], [-48,-31,-48,-26], [-48,-25,-28,-44], [-48,-25,-32,-8], [-48,-27,-33,-41], [-48,-22,-31,-39], [-48,-22,-12,-22], [-48,-22,-44,-18], [-48,-22,-48,-17], [-47,-35,-22,-10], [-47,-31,-24,-8], [-47,-31,-47,-26], [-47,-24,-31,-8], [-47,-24,-47,-17], [-47,-13,-43,-13], [-47,-33,-31,-33], [-47,-32,-31,-32], [-47,-27,-29,-45], [-47,-27,-39,-19], [-47,-26,-28,-44], [-47,-26,-10,-26], [-47,-35,-32,-20], [-47,-32,-41,-32], [-47,-27,-38,-36], [-47,-27,-38,-18], [-47,-21,-23,-45], [-47,-21,-39,-13], [-47,-21,-47,-17], [-46,-34,-34,-34], [-46,-20,-22,-44], [-46,-20,-38,-20], [-46,-20,-40,-13], [-46,-20,-46,-16], [-46,-35,-20,-9], [-46,-32,-41,-32], [-46,-32,-46,-26], [-46,-24,-31,-39], [-46,-24,-38,-24], [-46,-24,-30,-8], [-46,-24,-46,-16], [-46,-35,-46,-26], [-46,-19,-29,-35], [-46,-19,-15,-19], [-46,-19,-41,-14], [-46,-19,-35,-29], [-46,-19,-20,-19], [-46,-18,-28,-36], [-46,-18,-40,-18], [-46,-18,-42,-15], [-46,-18,-29,-35], [-46,-18,-18,-45], [-46,-17,-18,-45], [-46,-17,-27,-36], [-46,-17,-42,-17], [-46,-16,-26,-36], [-46,-16,-41,-16], [-45,-35,-20,-9], [-45,-35,-45,-26], [-45,-24,-31,-39], [-45,-24,-29,-24], [-45,-24,-40,-19], [-45,-24,-45,-16], [-45,-12,-42,-12], [-45,-29,-33,-41], [-45,-29,-36,-29], [-45,-29,-22,-6], [-45,-29,-45,-16], [-45,-34,-20,-10], [-45,-34,-45,-16], [-44,-31,-20,-31], [-44,-31,-44,-16], [-44,-12,-41,-12], [-44,-31,-10,-31], [-44,-34,-33,-34], [-44,-34,-20,-10], [-44,-34,-44,-15], [-43,-31,-29,-45], [-43,-31,-10,-31], [-43,-31,-21,-8], [-43,-31,-43,-15], [-43,-12,-39,-12], [-43,-35,-43,-15], [-43,-34,-43,-15], [-42,-33,-23,-14], [-42,-33,-42,-15], [-42,-33,-30,-21], [-42,-38,-28,-38], [-42,-38,-28,-24], [-41,-38,-25,-38], [-41,-33,-15,-7], [-41,-33,-41,-14], [-41,-42,-36,-37], [-41,-38,-27,-38], [-41,-38,-31,-28], [-41,-29,-31,-39], [-41,-29,-25,-29], [-41,-29,-21,-8], [-41,-29,-41,-14], [-41,-41,-15,-41], [-41,-33,-29,-45], [-41,-33,-18,-11], [-40,-42,-33,-34], [-40,-33,-29,-45], [-40,-33,-17,-10], [-40,-33,-40,-14], [-40,-35,-18,-13], [-40,-35,-40,-28], [-40,-26,-22,-44], [-40,-26,-33,-26], [-40,-26,-21,-7], [-40,-26,-40,-14], [-40,-35,-33,-41], [-40,-35,-28,-23], [-40,-35,-40,-17], [-40,-15,-23,-32], [-40,-15,-16,-15], [-40,-15,-33,-9], [-40,-15,-21,-15], [-40,-14,-19,-35], [-40,-14,-15,-14], [-40,-13,-19,-34], [-40,-13,-19,-13], [-40,-11,-17,-33], [-39,-41,-32,-34], [-39,-35,-29,-45], [-39,-35,-28,-23], [-39,-35,-39,-13], [-39,-11,-17,-33], [-39,-11,-21,-11], [-39,-41,-39,-13], [-39,-39,-29,-39], [-39,-36,-17,-14], [-39,-36,-39,-19], [-39,-17,-26,-5], [-39,-17,-39,-13], [-39,-11,-29,-21], [-38,-41,-31,-34], [-38,-41,-38,-37], [-38,-36,-33,-41], [-38,-36,-17,-14], [-38,-36,-38,-13], [-38,-11,-29,-21], [-38,-11,-16,-33], [-38,-36,-29,-45], [-38,-36,-31,-29], [-38,-36,-38,-19], [-38,-17,-23,-32], [-38,-17,-23,-2], [-38,-17,-38,-13], [-38,-42,-34,-42], [-38,-42,-25,-29], [-38,-42,-38,-37], [-38,-36,-29,-28], [-38,-10,-18,-30], [-38,-10,-20,-10], [-37,-41,-32,-41], [-37,-41,-26,-30], [-37,-41,-37,-37], [-37,-33,-27,-44], [-37,-33,-33,-33], [-37,-33,-29,-25], [-37,-33,-37,-18], [-37,-16,-19,-34], [-37,-16,-18,-16], [-37,-16,-28,-7], [-37,-14,-20,-31], [-37,-14,-18,-14], [-37,-14,-32,-9], [-37,-13,-15,-35], [-37,-13,-17,-13], [-37,-12,-29,-21], [-37,-12,-17,-12], [-37,-11,-15,-33], [-37,-43,-23,-29], [-37,-43,-37,-37], [-37,-36,-28,-44], [-37,-36,-21,-20], [-37,-36,-37,-18], [-37,-17,-19,-35], [-37,-17,-23,-3], [-37,-17,-37,-10], [-37,-45,-33,-45], [-37,-43,-22,-28], [-37,-36,-15,-14], [-37,-12,-16,-33], [-37,-12,-19,-12], [-37,-10,-24,-23], [-37,-10,-20,-10], [-36,-42,-15,-20], [-36,-42,-36,-37], [-36,-36,-28,-44], [-36,-36,-15,-14], [-36,-36,-36,-18], [-36,-16,-25,-28], [-36,-16,-23,-3], [-36,-16,-36,-10], [-36,-42,-31,-38], [-36,-42,-36,-10], [-36,-42,-21,-28], [-35,-42,-21,-28], [-35,-42,-35,-37], [-35,-35,-27,-44], [-35,-35,-29,-35], [-35,-35,-23,-23], [-35,-35,-35,-30], [-35,-28,-18,-45], [-35,-28,-22,-28], [-35,-28,-19,-12], [-35,-28,-35,-10], [-35,-35,-31,-39], [-35,-35,-22,-35], [-35,-35,-24,-24], [-35,-35,-35,-17], [-35,-13,-18,-30], [-35,-13,-29,-13], [-35,-13,-29,-7], [-35,-11,-15,-31], [-35,-11,-20,-11], [-35,-10,-12,-33], [-35,-10,-20,-10], [-35,-42,-29,-37], [-35,-35,-23,-35], [-35,-35,-14,-15], [-35,-35,-35,-31], [-35,-29,-29,-35], [-35,-29,-17,-29], [-35,-29,-21,-15], [-35,-29,-35,-9], [-34,-39,-29,-45], [-34,-39,-30,-39], [-34,-39,-24,-29], [-34,-39,-34,-9], [-34,-43,-30,-43], [-34,-39,-28,-44], [-34,-39,-29,-39], [-34,-44,-30,-40], [-34,-42,-10,-18], [-34,-42,-34,-9], [-33,-44,-29,-40], [-33,-43,-29,-43], [-33,-42,-29,-37], [-33,-42,-33,-9], [-33,-44,-28,-39], [-33,-37,-14,-17], [-33,-37,-33,-9], [-33,-44,-27,-39], [-33,-43,-22,-43], [-33,-36,-29,-36], [-33,-36,-12,-16], [-33,-36,-33,-9], [-32,-44,-24,-36], [-32,-33,-21,-44], [-32,-33,-24,-25], [-32,-33,-32,-9], [-32,-41,-16,-41], [-32,-41,-28,-37], [-32,-41,-32,-34], [-32,-25,-22,-36], [-32,-25,-13,-25], [-32,-25,-18,-11], [-32,-25,-32,-9], [-32,-44,-21,-33], [-32,-34,-21,-44], [-32,-34,-18,-34], [-32,-27,-22,-37], [-32,-27,-21,-17], [-32,-27,-32,-8], [-31,-34,-21,-44], [-31,-34,-18,-34], [-31,-29,-17,-44], [-31,-29,-14,-29], [-31,-29,-31,-8], [-31,-44,-19,-32], [-31,-40,-27,-44], [-31,-40,-15,-40], [-31,-40,-31,-34], [-31,-32,-18,-45], [-31,-32,-24,-25], [-31,-32,-31,-8], [-31,-32,-27,-36], [-31,-32,-15,-16], [-30,-40,-27,-44], [-30,-40,-24,-40], [-30,-40,-24,-34], [-30,-40,-30,-33], [-30,-32,-27,-36], [-30,-32,-15,-17], [-30,-32,-30,-8], [-30,-45,-23,-38], [-30,-45,-30,-33], [-30,-24,-25,-29], [-30,-24,-21,-15], [-30,-24,-30,-8], [-30,-44,-30,-40], [-30,-32,-17,-44], [-30,-32,-20,-32], [-30,-32,-14,-16], [-29,-44,-13,-28], [-29,-44,-29,-40], [-29,-36,-21,-44], [-29,-36,-13,-19], [-29,-36,-29,-7], [-29,-42,-21,-42], [-29,-42,-16,-30], [-29,-42,-9,-42], [-29,-42,-9,-22], [-29,-37,-22,-44], [-29,-37,-23,-37], [-29,-37,-29,-7], [-29,-45,-21,-37], [-29,-45,-29,-40], [-29,-25,-19,-35], [-29,-25,-14,-25], [-29,-25,-29,-7], [-28,-44,-22,-38], [-28,-44,-28,-40], [-28,-26,-23,-32], [-28,-26,-18,-26], [-28,-26,-16,-14], [-28,-26,-28,-7], [-28,-43,-24,-43], [-28,-43,-9,-24], [-28,-43,-28,-37], [-28,-30,-22,-36], [-28,-30,-9,-30], [-28,-30,-14,-17], [-28,-30,-28,-7], [-28,7,-24,7], [-28,7,-22,13], [-28,8,-24,4], [-28,8,-24,8], [-28,-44,-28,-6], [-28,6,-24,10], [-28,6,-28,10], [-27,-42,9,-42], [-27,-42,-23,-37], [-27,-42,-27,-11], [-27,-9,-13,-23], [-27,-9,-20,-9], [-27,-9,-23,-4], [-27,-8,-21,-14], [-27,-8,-23,-4], [-27,-8,-21,-8], [-27,-8,-23,-3], [-27,-8,-7,-28], [-27,7,-23,7], [-27,7,-24,10], [-27,7,-23,11], [-27,9,-23,4], [-27,9,-22,4], [-27,10,-20,3], [-27,10,-24,10], [-27,11,-20,3], [-27,11,-24,11], [-27,11,-23,11], [-27,11,-23,15], [-27,-35,-16,-24], [-27,-35,-27,-6], [-27,5,-19,5], [-27,8,-23,12], [-27,8,-27,12], [-27,-37,-18,-45], [-27,-37,-27,-5], [-27,5,-27,13], [-26,-44,-26,-5], [-26,9,-20,3], [-26,9,-26,13], [-26,-43,-21,-38], [-26,-43,-26,-37], [-26,-35,-17,-44], [-26,-35,-26,-5], [-26,4,-22,4], [-26,13,-16,23], [-26,13,-22,13], [-26,13,-18,21], [-26,14,-22,14], [-26,-44,-20,-38], [-26,-44,-26,-37], [-26,-33,-22,-37], [-26,-33,-17,-24], [-26,-33,-26,-5], [-26,14,-21,14], [-26,14,-18,22], [-25,-44,-19,-38], [-25,-44,-25,-37], [-25,-36,-17,-44], [-25,-36,-19,-36], [-25,-36,-14,-25], [-25,-36,-25,-4], [-25,7,-19,7], [-25,-44,-25,-4], [-25,6,-19,6], [-25,15,-21,15], [-25,15,-17,23], [-25,-44,-18,-37], [-25,-44,-25,-34], [-25,-27,-18,-34], [-25,-27,-21,-27], [-25,-27,-25,-4], [-25,4,-25,12], [-24,-44,-18,-38], [-24,-44,-24,-34], [-24,-27,-18,-33], [-24,-27,-24,-3], [-24,4,-24,12], [-24,-41,21,-41], [-24,-41,-24,-34], [-24,-33,-19,-27], [-24,-33,-24,-3], [-24,2,-20,2], [-24,6,-19,6], [-24,12,-20,16], [-24,12,-19,17], [-24,13,-18,19], [-24,16,-20,16], [-24,-36,-20,-36], [-24,-34,-18,-34], [-24,-27,-17,-34], [-24,-27,-17,-27], [-24,-27,-16,-19], [-24,-27,-24,-9], [-24,-7,-24,-1], [-24,17,-19,17], [-23,-43,-18,-38], [-23,-43,-23,-38], [-23,-32,-11,-44], [-23,-32,-17,-32], [-23,-32,-13,-22], [-23,-26,-16,-33], [-23,-26,-7,-26], [-23,-22,-12,-33], [-23,-22,-9,-22], [-23,-22,-15,-13], [-23,-22,-23,-8], [-23,-7,-17,-13], [-23,-7,-23,2], [-23,17,-19,17], [-23,-43,-23,-23], [-23,-20,-14,-28], [-23,-20,-15,-20], [-23,-20,-17,-14], [-23,-20,-23,0], [-23,5,-19,5], [-23,14,-16,21], [-23,18,-19,18], [-23,-37,-14,-28], [-23,-36,-14,-28], [-23,-23,-15,-31], [-23,-23,-16,-23], [-23,-23,-14,-15], [-23,-23,-23,-7], [-23,6,-19,6], [-23,12,-23,18], [-22,-45,-14,-37], [-22,-39,-17,-44], [-22,-39,-12,-39], [-22,-38,-15,-45], [-22,-33,-11,-44], [-22,-33,-13,-33], [-22,-28,-17,-33], [-22,-28,-11,-28], [-22,-28,-22,-5], [-22,18,-18,18], [-22,-45,-10,-33], [-22,-45,-22,-38], [-22,-27,-16,-33], [-22,-27,-15,-20], [-22,-27,-22,-5], [-22,0,-16,-6], [-22,5,-18,9], [-22,19,-18,19], [-22,-39,-16,-39], [-22,-39,-22,-6], [-22,14,-22,19], [-21,-39,-15,-45], [-21,-38,-14,-45], [-21,-37,-14,-45], [-21,-27,-15,-33], [-21,-27,-13,-19], [-21,-27,-21,-6], [-21,-2,-3,-20], [-21,16,-15,22], [-21,17,-18,20], [-21,19,-18,19], [-21,-39,-14,-45], [-21,-35,-9,-24], [-21,-35,-21,-20], [-21,-18,-16,-23], [-21,-18,-21,-8], [-21,-2,-13,-10], [-21,-1,-15,-7], [-21,-1,-16,-6], [-21,0,-17,-4], [-21,20,-17,20], [-21,-44,-10,-33], [-21,-44,-21,-39], [-21,-35,-11,-45], [-21,-35,-10,-24], [-21,-30,-13,-22], [-21,-30,-21,-18], [-21,-14,-7,-28], [-21,-14,-14,-14], [-21,-14,-17,-11], [-21,-4,-17,-4], [-21,-3,-3,-20], [-21,-3,-21,1], [-21,3,-21,7], [-20,-38,-14,-45], [-20,-32,-16,-32], [-20,-32,-11,-23], [-20,-32,-20,-28], [-20,-25,-12,-33], [-20,-25,-13,-25], [-20,-25,-20,-19], [-20,-17,-14,-17], [-20,-1,-16,-6], [-20,-1,-20,2], [-20,18,-16,23], [-20,-30,-15,-35], [-20,-30,-13,-23], [-20,-24,-12,-32], [-20,-24,-12,-24], [-20,-24,-20,-17], [-20,-11,-11,-21], [-20,-3,-13,-10], [-20,-2,-15,-7], [-20,-2,-16,-6], [-20,-44,-15,-39], [-20,-44,-20,-38], [-20,-36,-11,-45], [-20,-36,-20,-32], [-20,-24,-10,-34], [-20,-24,-14,-24], [-20,-24,-20,-9], [-20,-4,-5,-19], [-20,-4,-3,-20], [-20,-3,-15,-7], [-19,-44,-14,-39], [-19,-44,-19,-12], [-19,-4,-3,-20], [-19,-3,-15,-7], [-19,4,-19,8], [-19,-44,-13,-38], [-19,-44,-19,-38], [-19,-36,-19,-12], [-19,-4,-13,-10], [-19,22,-13,22], [-19,22,-14,27], [-19,23,-15,27], [-19,-45,-19,-38], [-19,-30,-12,-23], [-19,-30,-19,-19], [-19,-17,-13,-23], [-19,-17,-19,-14], [-19,-6,-14,-10], [-19,-5,-7,-17], [-19,-5,-5,-19], [-19,-5,-3,-20], [-19,-4,-15,-7], [-19,23,-14,19], [-18,-43,-10,-43], [-18,-43,-13,-38], [-18,-43,-18,-39], [-18,-38,-11,-45], [-18,-37,-11,-44], [-18,-29,-14,-33], [-18,-29,-12,-29], [-18,-29,-13,-24], [-18,-29,-18,-19], [-18,-13,-11,-21], [-18,-7,-14,-11], [-18,-7,-18,-3], [-18,24,-14,19], [-18,24,-14,20], [-18,-43,-9,-43], [-18,-43,-14,-39], [-18,-40,-13,-45], [-18,-40,-7,-40], [-18,-40,-13,-44], [-18,-40,-12,-40], [-18,-38,-11,-44], [-18,-28,-10,-36], [-18,-28,-6,-28], [-18,-28,-18,-22], [-18,-13,-18,-3], [-18,9,-18,12], [-18,23,-14,19], [-18,25,-14,20], [-18,-44,-11,-44], [-18,-44,-18,-38], [-18,-27,-12,-33], [-18,-27,-18,-23], [-18,-20,-10,-28], [-18,-20,-18,-13], [-18,-10,-18,-4], [-18,9,-18,14], [-18,20,-18,25], [-17,-44,-17,-39], [-17,-33,-8,-24], [-17,-33,-17,-14], [-17,-10,-17,-4], [-17,26,-12,26], [-17,-44,-10,-44], [-17,-24,-10,-31], [-17,-24,-13,-19], [-17,-24,-17,-14], [-17,-7,-7,-17], [-17,-7,-5,-19], [-17,-6,-3,-20], [-17,11,-17,16], [-17,26,-13,26], [-17,-43,-10,-43], [-17,-24,-12,-28], [-17,-24,-13,-20], [-17,-24,-17,-17], [-17,-7,-3,-20], [-17,-6,-13,-10], [-17,12,-17,16], [-16,-42,-9,-42], [-16,-42,-16,-37], [-16,-34,-12,-30], [-16,-27,-10,-34], [-16,-22,-12,-22], [-16,-22,-13,-19], [-16,-8,-7,-17], [-16,-7,-3,-20], [-16,13,-16,17], [-16,-34,-16,-24], [-16,-21,-8,-29], [-16,-21,-12,-21], [-16,-21,-16,-15], [-16,-8,-5,-19], [-16,14,-16,18], [-16,-44,-11,-44], [-16,-44,-12,-40], [-16,-44,-16,-35], [-16,-33,-12,-33], [-16,-28,-10,-34], [-16,-28,-10,-22], [-16,-27,-9,-34], [-16,-27,-6,-27], [-16,-19,-9,-25], [-16,-12,-16,-7], [-16,15,-16,19], [-16,27,-11,27], [-15,-45,-7,-37], [-15,-45,-15,-37], [-15,-27,-10,-22], [-15,-26,-10,-32], [-15,-26,-6,-26], [-15,-20,-15,-16], [-15,-11,-15,-7], [-15,16,-15,20], [-15,-31,-10,-26], [-15,-23,-10,-27], [-15,-23,-10,-23], [-15,-23,-10,-18], [-15,-16,-11,-21], [-15,-8,-3,-20], [-15,17,-15,21], [-15,-45,-10,-40], [-15,-27,-9,-33], [-15,-27,-15,-20], [-15,-9,-7,-17], [-15,-9,-5,-19], [-15,-9,-3,-20], [-15,18,-15,22], [-14,-23,-7,-16], [-14,-17,-11,-21], [-14,-10,-7,-17], [-14,-9,-5,-19], [-14,-9,-3,-20], [-14,19,-14,22], [-14,-33,-14,-20], [-14,-10,-5,-19], [-14,-45,-8,-39], [-14,-10,-3,-20], [-13,-38,-8,-44], [-13,-38,-9,-38], [-13,-31,-13,-28], [-13,-24,-13,-19], [-13,-10,-3,-20], [-13,21,-13,27], [-13,-40,10,-40], [-13,-39,-8,-44], [-13,-39,-7,-39], [-13,-32,-13,-24], [-13,-21,-9,-25], [-13,-20,-6,-27], [-13,-13,-13,-10], [-13,4,-9,4], [-13,23,-13,27], [-13,-33,-5,-25], [-13,-12,-8,-17], [-13,-11,-7,-17], [-13,-11,-5,-19], [-13,-11,-3,-20], [-12,-32,-12,-26], [-12,-12,-8,-17], [-12,-12,-7,-17], [-12,-11,-5,-19], [-12,-11,-3,-20], [-12,4,-7,4], [-12,4,-9,8], [-12,-45,-7,-39], [-12,-45,-12,-38], [-12,-23,-7,-28], [-12,-12,-5,-19], [-12,6,-8,6], [-12,-45,-6,-39], [-12,-32,-6,-27], [-12,-25,-8,-29], [-12,-25,-8,-25], [-12,-12,-3,-20], [-11,-41,10,-41], [-11,-32,-11,-25], [-11,-13,-7,-17], [-11,-12,-5,-19], [-11,-12,-3,-20], [-11,6,-8,6], [-11,-13,-5,-19], [-11,3,-4,3], [-11,7,-7,7], [-11,30,-7,34], [-11,-33,-11,-26], [-11,-24,-7,-28], [-11,-13,-3,-20], [-11,31,-7,34], [-10,-41,11,-41], [-10,-16,-10,-12], [-10,-1,-3,-1], [-10,7,-6,3], [-10,-38,-3,-44], [-10,-37,-3,-44], [-10,-34,-10,-30], [-10,-14,-5,-19], [-10,-13,-3,-20], [-10,32,-6,35], [-10,-23,-6,-27], [-10,-14,-3,-20], [-10,7,-5,3], [-10,32,-6,36], [-9,-38,-3,-44], [-9,-14,-5,-19], [-9,-14,-3,-20], [-9,3,-5,3], [-9,33,-5,37], [-9,-28,-3,-22], [-9,-15,-5,-19], [-9,-30,-9,-26], [-9,-15,-3,-20], [-9,1,-3,1], [-9,34,-4,39], [-9,34,3,45], [-8,-44,-3,-38], [-8,-43,-3,-38], [-8,-43,0,-35], [-8,-19,-8,-14], [-8,4,-8,8], [-8,-40,-3,-44], [-8,-39,-3,-44], [-8,-39,18,-39], [-8,-29,-8,-25], [-8,-1,-4,-1], [-8,35,2,45], [-8,-44,-2,-38], [-7,-43,-3,-38], [-7,-39,-3,-44], [-7,-16,-3,-20], [-7,4,-7,8], [-7,-43,-1,-38], [-7,-43,-7,-37], [-7,-17,-3,-20], [-7,8,-3,4], [-7,37,1,44], [-6,8,-3,4], [-6,-19,13,-19], [-6,38,0,44], [-6,-21,-6,-17], [-5,-42,5,-42], [-5,-42,-2,-39], [-5,-42,-5,-37], [-5,-20,14,-20], [-5,-43,2,-36], [-5,-43,-5,-38], [-5,5,-1,5], [-5,4,-5,8], [-4,-43,2,-37], [-4,-43,-4,-39], [-4,4,-4,8], [-4,-43,-4,-38], [-4,-18,0,-22], [-4,-44,3,-38], [-4,-44,-4,-37], [-4,-22,1,-26], [-4,7,0,7], [-3,-44,-3,-36], [-3,-23,1,-27], [-3,-19,12,-19], [-3,-43,4,-36], [-3,-43,-3,-36], [-2,-42,11,-42], [-2,-42,4,-36], [-2,-42,-2,-38], [-2,-37,5,-44], [-2,-40,4,-46], [-2,-40,10,-40], [-2,-40,2,-36], [-2,-39,5,-45], [-2,-39,18,-39], [-2,-39,16,-39], [-2,-38,5,-44], [-2,-38,18,-38], [-2,-38,2,-38], [-1,-25,-1,-19], [-1,-43,5,-43], [-1,-43,9,-34], [-1,-43,-1,-39], [-1,-26,-1,-19], [-1,-15,7,-15], [-1,-44,5,-44], [-1,-44,4,-39], [-1,-44,-1,-38], [-1,-24,-1,-19], [-1,-15,6,-15], [-1,28,13,28], [0,-45,0,-38], [0,-35,9,-44], [0,-26,0,-19], [0,-45,16,-30], [0,-45,0,-37], [0,-36,9,-44], [0,-27,0,-23], [0,-22,4,-18], [0,-21,8,-14], [0,-21,8,-21], [0,-21,7,-14], [0,-19,18,-19], [0,28,4,32], [0,29,13,29], [1,-45,1,-37], [1,28,5,32], [1,44,10,44], [1,-44,5,-44], [1,-44,1,-37], [1,45,7,45], [2,-43,2,-36], [2,-21,7,-21], [2,-21,10,-13], [2,-18,9,-18], [2,-18,6,-14], [2,28,6,32], [2,-43,12,-33], [2,-37,9,-44], [2,-36,9,-43], [2,-21,12,-21], [2,-21,11,-13], [2,-17,7,-22], [2,-14,9,-22], [2,-14,23,-14], [2,-46,38,-10], [2,-45,38,-10], [2,-40,10,-40], [2,-40,9,-33], [2,-37,9,-43], [2,-20,14,-20], [2,-20,9,-13], [2,-18,7,-23], [2,-18,7,-14], [2,-17,8,-22], [2,31,10,31], [3,-45,11,-37], [3,-38,9,-44], [3,-38,14,-38], [3,-37,9,-43], [3,-23,14,-12], [3,-17,8,-22], [3,24,10,24], [3,25,10,25], [3,45,8,45], [3,-43,15,-31], [3,-23,15,-11], [3,-16,9,-22], [3,-16,7,-16], [3,31,10,31], [3,-45,3,-38], [3,-24,3,-14], [3,22,7,26], [3,29,10,29], [4,-43,38,-9], [4,-43,4,-39], [4,-24,4,-14], [4,-43,11,-36], [4,-43,4,-37], [4,-20,11,-12], [4,-20,4,-14], [4,-46,4,-36], [4,-22,15,-11], [4,-22,4,-14], [4,15,8,11], [4,15,4,19], [4,21,4,25], [4,30,8,30], [4,32,8,32], [5,-45,5,-41], [5,-38,9,-42], [5,-38,8,-34], [5,-20,12,-12], [5,-20,5,-14], [5,12,5,16], [5,-37,14,-37], [5,-37,10,-31], [5,-22,11,-22], [5,-22,16,-11], [5,-22,5,-14], [5,10,5,14], [5,17,5,20], [5,-24,5,-14], [5,5,5,12], [5,14,5,18], [6,-23,19,-10], [6,-23,6,-14], [6,11,6,15], [6,26,9,22], [6,-17,11,-22], [6,-17,10,-13], [6,-16,11,-21], [6,-16,12,-21], [6,-16,21,-16], [6,-14,13,-21], [6,-14,23,-14], [6,8,6,13], [6,26,10,22], [6,-22,18,-10], [6,-22,6,-14], [6,5,6,10], [7,-43,39,-11], [7,-43,7,-35], [7,-23,20,-10], [7,-23,7,-14], [7,5,7,9], [7,-43,13,-37], [7,-23,19,-12], [7,5,7,13], [7,32,11,28], [7,-42,39,-11], [7,-37,25,-37], [7,-37,20,-25], [7,-37,7,-33], [7,10,7,16], [8,-43,19,-32], [8,-38,17,-38], [8,-38,16,-29], [8,-20,11,-20], [8,-20,8,-14], [8,5,8,12], [8,14,8,18], [8,32,11,28], [8,-44,8,-37], [8,-17,12,-21], [8,-17,14,-12], [8,-17,8,-14], [8,8,8,15], [8,16,8,20], [8,32,12,28], [8,-36,15,-43], [8,-36,12,-36], [8,-36,13,-32], [8,-36,15,-42], [8,-36,12,-32], [8,-21,12,-21], [8,-21,20,-10], [8,-21,8,-13], [8,12,8,17], [8,45,15,38], [9,-44,9,-35], [9,-33,20,-45], [9,-16,13,-21], [9,-16,13,-12], [9,-15,14,-20], [9,-15,21,-15], [9,-13,15,-20], [9,-13,24,-13], [9,16,9,25], [9,32,12,28], [9,45,15,38], [9,-34,20,-45], [9,-22,19,-12], [9,-22,9,-13], [9,18,9,25], [9,-37,15,-43], [9,-37,25,-37], [9,-37,15,-31], [9,-18,20,-18], [9,-18,9,-13], [9,20,9,25], [10,-15,14,-20], [10,-15,21,-15], [10,-42,40,-12], [10,-42,10,-35], [10,-21,22,-9], [10,-21,10,-13], [10,43,15,38], [10,-43,31,-22], [10,-43,25,-28], [10,-42,29,-23], [10,-22,10,-13], [10,44,16,38], [11,-43,28,-25], [11,-22,25,-8], [11,-22,11,-13], [11,43,15,38], [11,44,16,38], [11,-43,36,-18], [11,-21,20,-11], [11,-21,11,-13], [11,42,15,38], [11,43,16,38], [11,-43,17,-37], [11,-43,36,-19], [11,-21,21,-11], [11,-21,11,-12], [12,-43,36,-19], [12,-40,16,-45], [12,-40,19,-40], [12,-40,40,-12], [12,-40,12,-36], [12,-32,17,-38], [12,-32,37,-32], [12,-32,36,-32], [12,-21,12,-12], [12,42,15,38], [12,43,16,38], [12,-44,18,-38], [12,-44,36,-19], [12,-43,17,-38], [12,-36,20,-44], [12,-36,38,-10], [12,-36,12,-30], [12,-28,18,-34], [12,-17,22,-17], [12,-17,19,-10], [12,-17,12,-12], [12,42,16,38], [12,-44,37,-20], [12,-36,19,-43], [12,-36,12,-32], [12,-29,18,-34], [12,-21,25,-8], [13,-44,18,-39], [13,-35,35,-35], [13,-15,17,-19], [13,-15,21,-15], [13,-15,17,-11], [13,-12,19,-18], [13,7,18,7], [13,42,16,38], [13,-18,20,-12], [13,-18,13,-12], [13,-36,30,-36], [13,-36,39,-10], [13,-36,13,-32], [13,-30,18,-34], [13,-30,30,-30], [13,-30,35,-30], [13,-21,27,-7], [13,-21,13,-12], [13,7,17,3], [14,-44,37,-20], [14,-43,37,-20], [14,-33,33,-33], [14,-30,18,-34], [14,-30,30,-30], [14,-20,14,-12], [14,-44,20,-44], [14,-44,30,-29], [14,-44,14,-37], [14,-31,21,-38], [14,-31,19,-31], [14,-31,25,-20], [14,-45,33,-26], [14,-45,14,-37], [14,-36,23,-45], [14,-36,24,-36], [14,-36,32,-18], [14,-36,14,-30], [14,-28,28,-42], [14,-19,14,-12], [15,-46,34,-27], [15,-46,15,-38], [15,-35,18,-39], [15,-35,29,-35], [15,-35,39,-11], [15,-35,15,-28], [15,-20,36,1], [15,-20,15,-11], [15,-46,24,-37], [15,-46,15,-35], [15,-29,28,-42], [15,-18,26,-8], [15,-18,15,-11], [15,-46,21,-40], [15,-46,15,-28], [15,-19,34,-1], [15,-19,15,-11], [15,4,19,8], [15,8,20,8], [16,-44,33,-26], [16,-36,24,-36], [16,-36,40,-12], [16,-36,16,-28], [16,-19,33,-2], [16,-19,16,-11], [16,-44,29,-31], [16,-42,20,-45], [16,-42,29,-28], [16,-42,16,-31], [16,-29,29,-42], [16,-28,23,-35], [16,-28,29,-28], [16,-16,22,-16], [16,-16,22,-11], [16,-16,16,-11], [16,0,22,0], [16,-42,16,-30], [16,-2,23,-2], [17,-42,33,-26], [17,-42,17,-30], [17,-13,20,-17], [17,-13,25,-13], [17,-11,22,-16], [17,-11,21,-16], [17,-11,21,-15], [17,3,23,3], [17,-42,17,-29], [17,-27,28,-38], [17,-27,28,-27], [17,-17,21,-17], [17,-17,26,-8], [17,-17,17,-11], [17,0,21,0], [17,4,17,8], [17,-44,17,-27], [17,-19,27,-9], [17,-19,17,-11], [18,-45,22,-40], [18,-45,18,-38], [18,-34,22,-38], [18,-34,33,-34], [18,-34,40,-12], [18,-34,18,-29], [18,-19,18,-11], [18,-45,18,-39], [18,-10,22,-14], [18,3,22,3], [18,-29,28,-38], [18,-29,34,-29], [18,-29,38,-9], [18,-26,31,-38], [18,-25,31,-38], [18,-25,33,-25], [18,-18,18,-10], [18,8,23,3], [19,-45,19,-40], [19,-28,29,-38], [19,-28,29,-28], [19,-28,32,-15], [19,-27,25,-27], [19,-26,31,-38], [19,-24,30,-35], [19,-18,19,-10], [19,-28,28,-37], [19,-28,30,-28], [19,-28,38,-9], [19,-27,30,-38], [19,-26,34,-26], [19,-26,37,-8], [19,-11,23,-15], [19,-37,24,-37], [19,-37,28,-28], [19,-37,19,-23], [19,-17,19,-10], [19,7,23,3], [20,-35,29,-35], [20,-35,36,-19], [20,-35,20,-24], [20,-17,20,-12], [20,-10,23,-14], [20,-10,24,-14], [20,-10,28,-10], [20,30,24,26], [20,-39,33,-26], [20,-39,20,-32], [20,-26,32,-38], [20,-26,33,-26], [20,-26,37,-9], [20,-26,28,-34], [20,-23,33,-36], [20,-17,20,-10], [20,-42,20,-26], [20,-17,25,-12], [20,4,24,4], [20,4,25,4], [20,29,24,26], [21,-42,21,-35], [21,-16,21,-10], [21,4,26,4], [21,-43,21,-24], [21,-16,21,-9], [21,-40,21,-24], [21,0,26,0], [21,27,26,27], [22,-29,30,-38], [22,-29,34,-29], [22,-29,39,-12], [22,-29,22,-25], [22,-11,28,-11], [22,-10,26,-14], [22,-9,35,-23], [22,-9,28,-9], [22,-9,25,-13], [22,26,27,26], [22,-23,43,-23], [22,-23,37,-8], [22,-22,30,-22], [22,-22,31,-14], [22,-34,34,-34], [22,-34,37,-20], [22,-34,22,-21], [22,-14,32,-4], [22,-14,22,-9], [23,-38,23,-20], [23,-15,23,-9], [23,23,23,27], [23,22,29,22], [23,22,23,27], [24,-38,24,-20], [24,-9,28,-9], [24,-38,24,-19], [24,-16,24,-8], [24,20,28,24], [24,21,28,25], [24,-39,35,-28], [24,-38,28,-42], [24,-38,29,-42], [24,-31,31,-38], [24,-31,35,-31], [24,-31,36,-19], [24,-31,24,-20], [24,-12,39,-27], [24,-12,32,-5], [24,-12,24,-8], [24,19,29,24], [24,19,24,23], [24,27,29,22], [25,-39,28,-42], [25,-39,35,-28], [25,-38,29,-42], [25,-21,41,-21], [25,-21,37,-8], [25,-20,40,-36], [25,-20,38,-20], [25,-13,39,-27], [25,-13,25,-8], [25,19,29,23], [25,27,29,22], [25,-39,29,-42], [25,-8,29,-8], [25,-33,31,-38], [25,-33,33,-33], [25,-33,38,-20], [25,-33,25,-22], [25,-12,25,-8], [25,17,25,21], [25,26,29,22], [26,-39,35,-30], [26,-14,39,-27], [26,-13,35,-23], [26,-11,26,-8], [26,23,30,19], [26,-40,35,-31], [26,-36,31,-36], [26,-36,35,-27], [26,-36,26,-28], [26,-19,30,-23], [26,-19,36,-19], [26,-19,37,-8], [26,-14,35,-23], [26,-40,33,-34], [26,-40,33,-33], [26,-36,32,-36], [26,-36,35,-28], [26,-36,26,-16], [26,14,26,18], [27,-37,33,-37], [27,-37,36,-28], [27,-37,27,-25], [27,-17,33,-24], [27,-17,36,-17], [27,-16,31,-21], [27,-16,40,-16], [27,-16,31,-20], [27,-16,42,-31], [27,-14,35,-23], [27,-13,32,-18], [27,22,35,14], [27,-38,36,-29], [27,-38,27,-30], [27,-16,41,-30], [27,-15,39,-27], [27,-15,41,-15], [27,-15,35,-23], [27,-38,27,-18], [27,-14,33,-20], [27,-14,37,-23], [27,11,27,15], [28,-37,32,-37], [28,-37,36,-29], [28,-37,28,-24], [28,-14,37,-23], [28,-14,32,-18], [28,21,35,14], [28,23,34,17], [28,-33,33,-33], [28,-33,34,-27], [28,-33,28,-16], [28,-14,32,-19], [28,-10,28,-7], [28,9,33,4], [28,19,28,25], [28,-32,33,-32], [28,-32,34,-27], [28,-32,28,-16], [28,-13,34,-19], [28,8,28,12], [28,19,32,19], [28,19,28,24], [29,-24,40,-36], [29,-24,33,-24], [29,-24,40,-13], [29,-24,29,-13], [29,7,38,7], [29,7,32,7], [29,18,32,18], [29,20,35,14], [29,21,34,15], [29,7,35,7], [29,18,33,18], [29,20,34,15], [29,-38,33,-34], [29,-38,29,-28], [29,-23,33,-27], [29,-23,38,-23], [29,-23,29,-16], [29,-10,35,-16], [29,5,33,5], [29,5,29,9], [29,18,29,22], [30,-38,33,-34], [30,-38,30,-28], [30,-24,33,-28], [30,-24,33,-24], [30,-24,30,-20], [30,-10,35,-16], [30,5,37,5], [30,17,30,21], [30,-37,30,-29], [30,-24,34,-27], [30,-24,38,-24], [30,-13,38,-21], [30,-13,41,-13], [30,-13,37,-6], [30,-12,40,-12], [30,-12,36,-6], [30,-11,39,-11], [30,3,37,10], [30,3,37,11], [30,17,34,17], [30,17,30,20], [30,-38,30,-31], [30,-26,35,-30], [30,-26,37,-19], [30,-14,40,-14], [30,-14,37,-7], [30,-13,37,-7], [30,1,30,7], [30,16,34,16], [30,16,30,20], [31,-38,36,-32], [31,-38,31,-31], [31,-27,39,-36], [31,-27,34,-27], [31,-27,37,-20], [31,-13,37,-7], [31,-12,40,-12], [31,-11,35,-16], [31,-11,39,-11], [31,-10,40,-19], [31,-9,40,-19], [31,2,36,-4], [31,3,38,10], [31,6,35,6], [31,16,35,12], [31,16,31,20], [31,-38,31,-29], [31,-27,35,-27], [31,-22,42,-22], [31,-22,31,-13], [31,-10,38,-10], [31,15,35,12], [31,19,35,15], [31,-38,31,-22], [31,-9,39,-17], [31,-9,42,-19], [31,-8,42,-19], [31,-2,35,1], [31,-1,37,-6], [31,15,31,19], [32,-38,32,-32], [32,-30,36,-34], [32,-30,32,-23], [32,-10,40,-19], [32,-10,39,-10], [32,-9,42,-19], [32,-1,37,-6], [32,1,36,-4], [32,14,32,19], [32,-30,32,-16], [32,-11,40,-19], [32,-11,39,-11], [32,0,36,-4], [32,-36,32,-19], [32,4,36,4], [32,4,38,10], [33,-35,33,-19], [33,-7,38,-13], [33,-7,37,-7], [33,-35,33,-24], [33,-13,42,-13], [33,-13,37,-9], [33,-13,33,-7], [33,-34,37,-38], [33,-27,37,-30], [33,-17,41,-24], [33,-17,39,-11], [33,-9,40,-16], [33,-9,38,-9], [33,-9,33,-5], [33,5,37,5], [33,5,38,9], [34,-8,38,-13], [34,-8,37,-8], [34,-8,38,-12], [34,-5,39,-11], [34,6,38,10], [34,15,37,11], [34,-27,40,-33], [34,-20,34,-10], [34,-6,39,-11], [34,-5,38,-9], [34,-33,34,-29], [34,-18,39,-23], [34,-18,40,-12], [34,-18,34,-4], [34,4,38,8], [34,10,38,6], [35,-30,40,-36], [35,-28,39,-32], [35,-19,39,-23], [35,-19,35,-5], [35,4,35,12], [35,-31,39,-36], [35,-31,40,-36], [35,-28,40,-33], [35,-24,42,-31], [35,-24,39,-24], [35,-24,35,-3], [35,4,35,11], [35,-34,39,-34], [35,-25,41,-31], [35,-25,39,-25], [35,-25,43,-17], [35,-25,35,-1], [36,-31,40,-36], [36,-28,40,-33], [36,-25,41,-31], [36,-25,40,-25], [36,-25,41,-20], [36,-25,36,-17], [36,-6,36,1], [36,-29,40,-33], [36,-24,40,-29], [36,-24,43,-17], [36,-24,36,-19], [36,-26,41,-31], [36,-26,41,-21], [36,-26,36,-19], [37,-26,41,-31], [37,-26,41,-26], [37,-26,42,-21], [37,-26,37,-19], [37,-26,41,-30], [37,-26,41,-21], [37,-26,37,-20], [37,-17,42,-22], [37,-17,41,-13], [37,-17,37,-11], [37,5,37,12], [37,-27,41,-31], [37,-27,37,-20], [38,-27,42,-23], [38,-27,38,-20], [38,-17,42,-22], [38,-17,42,-13], [38,-17,38,-9], [38,6,38,10], [38,-28,38,-21], [38,-18,44,-24], [38,-18,44,-18], [38,-18,42,-14], [38,-18,38,-13], [38,-28,43,-23], [38,-18,38,-10], [39,-28,39,-24], [39,-19,44,-24], [39,-19,45,-19], [39,-19,43,-15], [39,-19,39,-10], [39,-25,44,-30], [39,-20,39,-14], [39,-23,43,-23], [39,-23,39,-15], [40,-26,43,-30], [40,-22,44,-26], [40,-22,40,-18], [40,-26,44,-30], [40,-24,44,-24], [40,-24,40,-16], [40,-24,40,-17], [41,-17,45,-21], [41,-16,45,-20], [42,-25,42,-21], [42,-17,45,-20], [42,-16,46,-21], [42,-25,42,-22], [42,-19,46,-19], [42,-17,46,-21], [43,-19,47,-19], [43,-17,46,-21], [43,-20,48,-20], [44,-20,48,-20], [44,-21,49,-21]];